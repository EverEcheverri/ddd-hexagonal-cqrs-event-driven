// <auto-generated />
using System;
using EventSagaDriven.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventSagaDriven.Infrastructure.Migrations
{
    [DbContext(typeof(SqliteEventSagaDrivenContext))]
    [Migration("20240815201543_initial-sqlite")]
    partial class initialsqlite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("EventSagaDriven.Domain.Entities.Account.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccountType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Mobile");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b
                        .HasAnnotation("Cosmos:ContainerName", "Account")
                        .HasAnnotation("Cosmos:PartitionKeyName", "Id");
                });

            modelBuilder.Entity("EventSagaDriven.Domain.Entities.Account.AccountGenre", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("AccountGenres", (string)null);

                    b.HasAnnotation("Cosmos:ContainerName", "AccountGenres");
                });

            modelBuilder.Entity("EventSagaDriven.Domain.Entities.Genre.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b
                        .HasAnnotation("Cosmos:ContainerName", "Genre")
                        .HasAnnotation("Cosmos:PartitionKeyName", "Id");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8217f508-c17d-431e-9cf0-05ca8984971b"),
                            Description = "Imaginative stories involving advanced technology or space exploration",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = new Guid("e0007308-e1e3-4892-a5a7-883c02c6de22"),
                            Description = "Stories featuring magical elements and often set in imaginary worlds",
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("c39c3b71-78e9-4dcd-bbbd-35ac159f984b"),
                            Description = "Stories centered around solving a crime or unraveling a secret",
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("3eb63894-c376-4eea-923a-ac1f3bfc6235"),
                            Description = "Stories focused on love and relationships",
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("5ebf0600-c390-4b16-945d-eb0e734cf51c"),
                            Description = "Stories intended to frighten or disgust",
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("9b862593-628a-4bc1-8cc4-038e01f34241"),
                            Description = "Suspenseful stories often involving crime or danger",
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("386a04f3-e4c4-4922-9e79-e75ac0fa3a6a"),
                            Description = "Fictional stories set in the past",
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = new Guid("102077ed-f0de-442c-8d97-fbb7dfd96d08"),
                            Description = "Stories set in the present day",
                            Name = "Contemporary Fiction"
                        },
                        new
                        {
                            Id = new Guid("0de67652-5cc0-42ca-8005-aa41b3a41802"),
                            Description = "Character-driven stories with complex themes",
                            Name = "Literary Fiction"
                        },
                        new
                        {
                            Id = new Guid("fc74ff91-3de6-4267-bce9-f390d3b0ca7c"),
                            Description = "The story of a person's life written by someone else",
                            Name = "Biography"
                        },
                        new
                        {
                            Id = new Guid("7c9c3d92-40c1-4ac3-95dc-fd2916e1beda"),
                            Description = "The story of a person's life written by themselves",
                            Name = "Autobiography"
                        },
                        new
                        {
                            Id = new Guid("ba6e7cff-854e-45a4-bba9-9d262e7a8e81"),
                            Description = "Factual accounts of past events",
                            Name = "History"
                        },
                        new
                        {
                            Id = new Guid("a08e0160-ac13-4eb4-b4d8-c119f06d3913"),
                            Description = "Books offering advice or guidance on various life topics",
                            Name = "SelfHelp"
                        },
                        new
                        {
                            Id = new Guid("a2e70464-ad92-45e5-98a6-60d3169db78e"),
                            Description = "Books explaining scientific concepts and theories",
                            Name = "Science"
                        },
                        new
                        {
                            Id = new Guid("96ca16f4-bdd9-49ef-b0a9-3037cfeb4e14"),
                            Description = "Books about technological advancements and applications",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("3d315b2a-a0f3-4f02-b7a6-f320359a256a"),
                            Description = "Books on business strategies, management, and economics",
                            Name = "Business"
                        },
                        new
                        {
                            Id = new Guid("254d662e-2c55-49bf-a5b9-1d21b1892ce3"),
                            Description = "Books about exploring different places",
                            Name = "Travel"
                        },
                        new
                        {
                            Id = new Guid("a9b598b0-ca8a-400f-aa97-a258f5e39135"),
                            Description = "Books with recipes and culinary information",
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = new Guid("dc0a9d65-aa58-46a3-8e05-d44779563ad9"),
                            Description = "Books about visual arts, such as painting, sculpture, and photography",
                            Name = "Art"
                        });
                });

            modelBuilder.Entity("EventSagaDriven.Domain.Entities.Account.AccountGenre", b =>
                {
                    b.HasOne("EventSagaDriven.Domain.Entities.Account.Account", "Account")
                        .WithMany("AccountGenres")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventSagaDriven.Domain.Entities.Genre.Genre", "Genre")
                        .WithMany("AccountGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("EventSagaDriven.Domain.Entities.Account.Account", b =>
                {
                    b.Navigation("AccountGenres");
                });

            modelBuilder.Entity("EventSagaDriven.Domain.Entities.Genre.Genre", b =>
                {
                    b.Navigation("AccountGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
